// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceObjectApi.Models;

namespace SpaceObjectApi.Migrations
{
    [DbContext(typeof(SpaceObjectContext))]
    [Migration("20210826085820_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("SpaceObjectApi.Entities.SpaceObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("space_objects");
                });

            modelBuilder.Entity("SpaceObjectApi.Entities.Asteroid", b =>
                {
                    b.HasBaseType("SpaceObjectApi.Entities.SpaceObject");

                    b.Property<string>("Weight")
                        .HasColumnType("TEXT")
                        .HasColumnName("weight");

                    b.ToTable("asteroids");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Небольшой околоземный астероид из группы аполлонов, который характеризуется крайне вытянутой орбитой. Он был открытнемецким астрономом Вальтером Бааде в Паломарской обсерватории США и назван в честь Икара,персонажа древнегреческой мифологии, известного своей необычной смертью",
                            Name = "Икар",
                            Weight = "990000000"
                        });
                });

            modelBuilder.Entity("SpaceObjectApi.Entities.BlackHole", b =>
                {
                    b.HasBaseType("SpaceObjectApi.Entities.SpaceObject");

                    b.Property<string>("Diameter")
                        .HasColumnType("TEXT")
                        .HasColumnName("diameter");

                    b.ToTable("black_holes");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Сверхгигантская эллиптическая галактика типа cD в скоплении галактик Abell 85 в созвездии Кита на расстоянии около 700 млн световых лет от Солнца",
                            Name = "Holmberg 15A",
                            Diameter = "1500000"
                        });
                });

            modelBuilder.Entity("SpaceObjectApi.Entities.Planet", b =>
                {
                    b.HasBaseType("SpaceObjectApi.Entities.SpaceObject");

                    b.Property<string>("DistanceFromEarth")
                        .HasColumnType("TEXT")
                        .HasColumnName("distance_from_earth");

                    b.ToTable("planets");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Description = "Четвёртая по удалённости от Солнца и седьмая по размеру планетаСолнечной системы; масса планеты составляет 10,7 % массы Земли.Названа в честь Марса — древнеримского бога войны, соответствующего древнегреческому Аресу.",
                            Name = "Марс",
                            DistanceFromEarth = "55760000"
                        });
                });

            modelBuilder.Entity("SpaceObjectApi.Entities.Star", b =>
                {
                    b.HasBaseType("SpaceObjectApi.Entities.SpaceObject");

                    b.Property<string>("NumberOfYears")
                        .HasColumnType("TEXT")
                        .HasColumnName("number_of_years");

                    b.ToTable("stars");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Description = "Звезда созвездия Большого Пса. Звезда главной последовательностиспектрального класса A1. Ярчайшая звезда ночного неба,её светимость в 25 раз превышает светимость Солнца, при этом не является рекордной в мире звёзд.",
                            Name = "Сириус",
                            NumberOfYears = "230000000"
                        });
                });

            modelBuilder.Entity("SpaceObjectApi.Entities.Asteroid", b =>
                {
                    b.HasOne("SpaceObjectApi.Entities.SpaceObject", null)
                        .WithOne()
                        .HasForeignKey("SpaceObjectApi.Entities.Asteroid", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpaceObjectApi.Entities.BlackHole", b =>
                {
                    b.HasOne("SpaceObjectApi.Entities.SpaceObject", null)
                        .WithOne()
                        .HasForeignKey("SpaceObjectApi.Entities.BlackHole", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpaceObjectApi.Entities.Planet", b =>
                {
                    b.HasOne("SpaceObjectApi.Entities.SpaceObject", null)
                        .WithOne()
                        .HasForeignKey("SpaceObjectApi.Entities.Planet", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpaceObjectApi.Entities.Star", b =>
                {
                    b.HasOne("SpaceObjectApi.Entities.SpaceObject", null)
                        .WithOne()
                        .HasForeignKey("SpaceObjectApi.Entities.Star", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
